// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: NetworkData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace NetworkData {

  /// <summary>Holder for reflection information generated from NetworkData.proto</summary>
  public static partial class NetworkDataReflection {

    #region Descriptor
    /// <summary>File descriptor for NetworkData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NetworkDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFOZXR3b3JrRGF0YS5wcm90byJ6CgdOZXR3b3JrEi4KC2RhdGFTb3VyY2Vz",
            "GAogAygLMhkuTmV0d29yay5EYXRhU291cmNlc0VudHJ5Gj8KEERhdGFTb3Vy",
            "Y2VzRW50cnkSCwoDa2V5GAEgASgJEhoKBXZhbHVlGAIgASgLMgsuRGF0YVNv",
            "dXJjZToCOAEiQwoKRGF0YVNvdXJjZRItCgtjb252b2x1dGlvbhgKIAEoCzIW",
            "LkNvbnZvbHV0aW9uRGF0YVNvdXJjZUgAQgYKBGtpbmQiYAoVQ29udm9sdXRp",
            "b25EYXRhU291cmNlEiMKB3dlaWdodHMYCiABKAsyEi5PcHRpbWl6YWJsZVZl",
            "Y3RvchIiCgZiaWFzZXMYFCABKAsyEi5PcHRpbWl6YWJsZVZlY3RvciJhChFP",
            "cHRpbWl6YWJsZVZlY3RvchIWCgV2YWx1ZRgKIAEoCzIHLlZlY3RvchIZCght",
            "b21lbnR1bRgUIAEoCzIHLlZlY3RvchIZCgh2ZWxvY2l0eRgeIAEoCzIHLlZl",
            "Y3RvciIcCgZWZWN0b3ISEgoGdmFsdWVzGAogAygCQgIQAUIOqgILTmV0d29y",
            "a0RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::NetworkData.Network), global::NetworkData.Network.Parser, new[]{ "DataSources" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetworkData.DataSource), global::NetworkData.DataSource.Parser, new[]{ "Convolution" }, new[]{ "Kind" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetworkData.ConvolutionDataSource), global::NetworkData.ConvolutionDataSource.Parser, new[]{ "Weights", "Biases" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetworkData.OptimizableVector), global::NetworkData.OptimizableVector.Parser, new[]{ "Value", "Momentum", "Velocity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetworkData.Vector), global::NetworkData.Vector.Parser, new[]{ "Values" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Network : pb::IMessage<Network> {
    private static readonly pb::MessageParser<Network> _parser = new pb::MessageParser<Network>(() => new Network());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Network> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetworkData.NetworkDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Network() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Network(Network other) : this() {
      dataSources_ = other.dataSources_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Network Clone() {
      return new Network(this);
    }

    /// <summary>Field number for the "dataSources" field.</summary>
    public const int DataSourcesFieldNumber = 10;
    private static readonly pbc::MapField<string, global::NetworkData.DataSource>.Codec _map_dataSources_codec
        = new pbc::MapField<string, global::NetworkData.DataSource>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::NetworkData.DataSource.Parser), 82);
    private readonly pbc::MapField<string, global::NetworkData.DataSource> dataSources_ = new pbc::MapField<string, global::NetworkData.DataSource>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::NetworkData.DataSource> DataSources {
      get { return dataSources_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Network);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Network other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!DataSources.Equals(other.DataSources)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= DataSources.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      dataSources_.WriteTo(output, _map_dataSources_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dataSources_.CalculateSize(_map_dataSources_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Network other) {
      if (other == null) {
        return;
      }
      dataSources_.Add(other.dataSources_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 82: {
            dataSources_.AddEntriesFrom(input, _map_dataSources_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DataSource : pb::IMessage<DataSource> {
    private static readonly pb::MessageParser<DataSource> _parser = new pb::MessageParser<DataSource>(() => new DataSource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataSource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetworkData.NetworkDataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSource(DataSource other) : this() {
      switch (other.KindCase) {
        case KindOneofCase.Convolution:
          Convolution = other.Convolution.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSource Clone() {
      return new DataSource(this);
    }

    /// <summary>Field number for the "convolution" field.</summary>
    public const int ConvolutionFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NetworkData.ConvolutionDataSource Convolution {
      get { return kindCase_ == KindOneofCase.Convolution ? (global::NetworkData.ConvolutionDataSource) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.Convolution;
      }
    }

    private object kind_;
    /// <summary>Enum of possible cases for the "kind" oneof.</summary>
    public enum KindOneofCase {
      None = 0,
      Convolution = 10,
    }
    private KindOneofCase kindCase_ = KindOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KindOneofCase KindCase {
      get { return kindCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearKind() {
      kindCase_ = KindOneofCase.None;
      kind_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataSource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataSource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Convolution, other.Convolution)) return false;
      if (KindCase != other.KindCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (kindCase_ == KindOneofCase.Convolution) hash ^= Convolution.GetHashCode();
      hash ^= (int) kindCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (kindCase_ == KindOneofCase.Convolution) {
        output.WriteRawTag(82);
        output.WriteMessage(Convolution);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (kindCase_ == KindOneofCase.Convolution) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Convolution);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataSource other) {
      if (other == null) {
        return;
      }
      switch (other.KindCase) {
        case KindOneofCase.Convolution:
          if (Convolution == null) {
            Convolution = new global::NetworkData.ConvolutionDataSource();
          }
          Convolution.MergeFrom(other.Convolution);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 82: {
            global::NetworkData.ConvolutionDataSource subBuilder = new global::NetworkData.ConvolutionDataSource();
            if (kindCase_ == KindOneofCase.Convolution) {
              subBuilder.MergeFrom(Convolution);
            }
            input.ReadMessage(subBuilder);
            Convolution = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConvolutionDataSource : pb::IMessage<ConvolutionDataSource> {
    private static readonly pb::MessageParser<ConvolutionDataSource> _parser = new pb::MessageParser<ConvolutionDataSource>(() => new ConvolutionDataSource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConvolutionDataSource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetworkData.NetworkDataReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConvolutionDataSource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConvolutionDataSource(ConvolutionDataSource other) : this() {
      weights_ = other.weights_ != null ? other.weights_.Clone() : null;
      biases_ = other.biases_ != null ? other.biases_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConvolutionDataSource Clone() {
      return new ConvolutionDataSource(this);
    }

    /// <summary>Field number for the "weights" field.</summary>
    public const int WeightsFieldNumber = 10;
    private global::NetworkData.OptimizableVector weights_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NetworkData.OptimizableVector Weights {
      get { return weights_; }
      set {
        weights_ = value;
      }
    }

    /// <summary>Field number for the "biases" field.</summary>
    public const int BiasesFieldNumber = 20;
    private global::NetworkData.OptimizableVector biases_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NetworkData.OptimizableVector Biases {
      get { return biases_; }
      set {
        biases_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConvolutionDataSource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConvolutionDataSource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Weights, other.Weights)) return false;
      if (!object.Equals(Biases, other.Biases)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (weights_ != null) hash ^= Weights.GetHashCode();
      if (biases_ != null) hash ^= Biases.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (weights_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Weights);
      }
      if (biases_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Biases);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (weights_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Weights);
      }
      if (biases_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Biases);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConvolutionDataSource other) {
      if (other == null) {
        return;
      }
      if (other.weights_ != null) {
        if (weights_ == null) {
          Weights = new global::NetworkData.OptimizableVector();
        }
        Weights.MergeFrom(other.Weights);
      }
      if (other.biases_ != null) {
        if (biases_ == null) {
          Biases = new global::NetworkData.OptimizableVector();
        }
        Biases.MergeFrom(other.Biases);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 82: {
            if (weights_ == null) {
              Weights = new global::NetworkData.OptimizableVector();
            }
            input.ReadMessage(Weights);
            break;
          }
          case 162: {
            if (biases_ == null) {
              Biases = new global::NetworkData.OptimizableVector();
            }
            input.ReadMessage(Biases);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OptimizableVector : pb::IMessage<OptimizableVector> {
    private static readonly pb::MessageParser<OptimizableVector> _parser = new pb::MessageParser<OptimizableVector>(() => new OptimizableVector());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OptimizableVector> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetworkData.NetworkDataReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OptimizableVector() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OptimizableVector(OptimizableVector other) : this() {
      value_ = other.value_ != null ? other.value_.Clone() : null;
      momentum_ = other.momentum_ != null ? other.momentum_.Clone() : null;
      velocity_ = other.velocity_ != null ? other.velocity_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OptimizableVector Clone() {
      return new OptimizableVector(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 10;
    private global::NetworkData.Vector value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NetworkData.Vector Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "momentum" field.</summary>
    public const int MomentumFieldNumber = 20;
    private global::NetworkData.Vector momentum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NetworkData.Vector Momentum {
      get { return momentum_; }
      set {
        momentum_ = value;
      }
    }

    /// <summary>Field number for the "velocity" field.</summary>
    public const int VelocityFieldNumber = 30;
    private global::NetworkData.Vector velocity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NetworkData.Vector Velocity {
      get { return velocity_; }
      set {
        velocity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OptimizableVector);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OptimizableVector other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Value, other.Value)) return false;
      if (!object.Equals(Momentum, other.Momentum)) return false;
      if (!object.Equals(Velocity, other.Velocity)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (value_ != null) hash ^= Value.GetHashCode();
      if (momentum_ != null) hash ^= Momentum.GetHashCode();
      if (velocity_ != null) hash ^= Velocity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (value_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Value);
      }
      if (momentum_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Momentum);
      }
      if (velocity_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(Velocity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (momentum_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Momentum);
      }
      if (velocity_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Velocity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OptimizableVector other) {
      if (other == null) {
        return;
      }
      if (other.value_ != null) {
        if (value_ == null) {
          Value = new global::NetworkData.Vector();
        }
        Value.MergeFrom(other.Value);
      }
      if (other.momentum_ != null) {
        if (momentum_ == null) {
          Momentum = new global::NetworkData.Vector();
        }
        Momentum.MergeFrom(other.Momentum);
      }
      if (other.velocity_ != null) {
        if (velocity_ == null) {
          Velocity = new global::NetworkData.Vector();
        }
        Velocity.MergeFrom(other.Velocity);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 82: {
            if (value_ == null) {
              Value = new global::NetworkData.Vector();
            }
            input.ReadMessage(Value);
            break;
          }
          case 162: {
            if (momentum_ == null) {
              Momentum = new global::NetworkData.Vector();
            }
            input.ReadMessage(Momentum);
            break;
          }
          case 242: {
            if (velocity_ == null) {
              Velocity = new global::NetworkData.Vector();
            }
            input.ReadMessage(Velocity);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Vector : pb::IMessage<Vector> {
    private static readonly pb::MessageParser<Vector> _parser = new pb::MessageParser<Vector>(() => new Vector());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Vector> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetworkData.NetworkDataReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector(Vector other) : this() {
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector Clone() {
      return new Vector(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 10;
    private static readonly pb::FieldCodec<float> _repeated_values_codec
        = pb::FieldCodec.ForFloat(82);
    private readonly pbc::RepeatedField<float> values_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Vector);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Vector other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Vector other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 82:
          case 85: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
